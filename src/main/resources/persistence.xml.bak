<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="http://xmlns.jcp.org/xml/ns/persistence" version="2.1">
    <persistence-unit name="jpabook">
        <properties>
            <!-- 필수 속성 -->
            <property name="javax.persistence.jdbc.driver" value="org.h2.Driver"/>                              <!-- JDBC 드라이버 -->
            <property name="javax.persistence.jdbc.user" value="sa"/>                                           <!-- DB 접속 ID -->
            <property name="javax.persistence.jdbc.password" value=""/>                                         <!-- DB 접속 PW -->
            <property name="javax.persistence.jdbc.url" value="jdbc:h2:tcp://localhost/~/temp/jpabatch-work"/>  <!-- DB 접속 URL -->
            <!-- DB Dialect 설정 -->
            <!-- DB 변경 시 DB 방언(Dialect)만 교체 -->
            <!--
                https://docs.jboss.org/hibernate/orm/4.3/manual/en-US/html_single/#configuration-optional-dialects
                오라클 10g   : org.hibernate.dialect.oracle10gdialect
                MySQL       : org.hibernate.dialect.mysql5innodbdialect
                SQL Server  : org.hibernate.dialect.sqlserver2012dialect
            -->
            <property name="hibernate.dialect" value="org.hibernate.dialect.H2Dialect" />
            <!-- 옵션 -->
            <property name="hibernate.show_sql" value="true" />                  <!-- hibernate가 실행한 SQL을 출력  -->
            <property name="hibernate.format_sql" value="true" />                <!-- hibernate가 실행한 SQL 출력 시 정렬 -->
            <property name="hibernate.use_sql_comments" value="true" />          <!-- 쿼리 출력 시 주석도 함께 출력 -->
            <property name="hibernate.id.new_generator_mappings" value="true" /> <!-- JPA 표준에 맞춘 새로운 키 생성 전략 사용 -->
            <!--<property name="hibernate.hbm2ddl.auto" value="create" />-->
            <!--
            hibernate.hbm2ddl.auto 속성
                create : 기존 테이블을 삭제하고 새로 생성(DROP + CREATE)
                create-drop : CREATE 속성에 추가로 애플리케이션을 종료할 때 생성한 DDL을 제거 (DROP + CREATE + DROP)
                update : DB 테이블과 엔티티 매핑 정보를 비교해서 변경 사항만 수정
                validate : DB 테이블과 엔티티 매핑정보를 비교해서 차이가 있으면 경고를 남기고 애플리케이션을 실행하지 않음. DDL을 수행하지 않음
                none : 자동 생성 기능을 사용하지 않음
            -->
            1
            <!--<property name="hibernate.ejb.naming_strategy" value="org.hibernate.cfg.ImprovedNamingStrategy" />-->
            <!-- 테이블 명이나 컬럼 명이 생략되면 자바의 카멜 표기법을 테이블의 언더스코어 표기법으로 매핑하는 방법-->
        </properties>
    </persistence-unit>
</persistence>

